//! This code was AUTOGENERATED using the kinobi library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun kinobi to update it.
//!
//! [https://github.com/metaplex-foundation/kinobi]
//!

use crate::generated::types::CompressionAccountType;
use crate::generated::types::ConcurrentMerkleTreeHeaderData;
use borsh::BorshDeserialize;
use borsh::BorshSerialize;

/// Initialization parameters for an SPL ConcurrentMerkleTree.
///
/// Only the following permutations are valid:
///
/// | max_depth | max_buffer_size       |
/// | --------- | --------------------- |
/// | 14        | (64, 256, 1024, 2048) |
/// | 20        | (64, 256, 1024, 2048) |
/// | 24        | (64, 256, 512, 1024, 2048) |
/// | 26        | (64, 256, 512, 1024, 2048) |
/// | 30        | (512, 1024, 2048) |
///
#[derive(BorshSerialize, BorshDeserialize, Clone, Debug, Eq, PartialEq)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub struct ConcurrentMerkleTreeHeader {
    /// Account type
    pub account_type: CompressionAccountType,
    /// Versioned header
    pub header: ConcurrentMerkleTreeHeaderData,
}
