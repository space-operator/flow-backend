//! This code was AUTOGENERATED using the kinobi library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun kinobi to update it.
//!
//! [https://github.com/metaplex-foundation/kinobi]
//!

use crate::generated::types::AuthorizationData;
use borsh::BorshDeserialize;
use borsh::BorshSerialize;
use solana_program::pubkey::Pubkey;

#[derive(BorshSerialize, BorshDeserialize, Clone, Debug, Eq, PartialEq)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub enum DelegateArgs {
    CollectionV1 {
        authorization_data: Option<AuthorizationData>,
    },
    SaleV1 {
        amount: u64,
        authorization_data: Option<AuthorizationData>,
    },
    TransferV1 {
        amount: u64,
        authorization_data: Option<AuthorizationData>,
    },
    DataV1 {
        authorization_data: Option<AuthorizationData>,
    },
    UtilityV1 {
        amount: u64,
        authorization_data: Option<AuthorizationData>,
    },
    StakingV1 {
        amount: u64,
        authorization_data: Option<AuthorizationData>,
    },
    StandardV1 {
        amount: u64,
    },
    LockedTransferV1 {
        amount: u64,
        #[cfg_attr(
            feature = "serde",
            serde(with = "serde_with::As::<serde_with::DisplayFromStr>")
        )]
        locked_address: Pubkey,
        authorization_data: Option<AuthorizationData>,
    },
    ProgrammableConfigV1 {
        authorization_data: Option<AuthorizationData>,
    },
    AuthorityItemV1 {
        authorization_data: Option<AuthorizationData>,
    },
    DataItemV1 {
        authorization_data: Option<AuthorizationData>,
    },
    CollectionItemV1 {
        authorization_data: Option<AuthorizationData>,
    },
    ProgrammableConfigItemV1 {
        authorization_data: Option<AuthorizationData>,
    },
    PrintDelegateV1 {
        authorization_data: Option<AuthorizationData>,
    },
}
